include:
  - template: Jobs/Dependency-Scanning.gitlab-ci.yml
  - template: Security/License-Scanning.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
  - template: Code-Quality.gitlab-ci.yml

image: golang:1.19

.task:
  stage: test
  only:
    - merge_request
  before_script:
    - go install github.com/go-task/task/v3/cmd/task@latest
    - task install_tools
  #   - mkdir -p .go
  # variables:
  #   GOPATH: $CI_PROJECT_DIR/.go
  # cache:
  #   paths:
  #     - .go/pkg/mod/

stages:
  - test
  - deploy
  - notify

format:
  extends:
    - .task
  script:
    - task format

lint:
  image: registry.gitlab.com/gitlab-org/gitlab-build-images:golangci-lint-alpine
  extends:
    - .task
  script:
    - task lint

tests:integration:
  extends:
    - .task
  script:
    - task integration_tests

test:coverage:
  only:
    - main
    - merge_request
  extends:
    - .task
  script:
    - task coverage
  coverage: '/total:.*\d+.\d+%/'
  artifacts:
    when: always
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: report.xml

deploy:preview:
  stage: deploy
  only:
    - merge_request
  image: docker
  services:
    - docker:dind
  before_script:
    - apk add curl
    - curl -L https://fly.io/install.sh | sh
  script:
    - /root/.fly/bin/flyctl deploy --config ./fly.preview.toml

deploy:production:
  stage: deploy
  only:
    - main
  image: docker
  services:
    - docker:dind
  before_script:
    - apk add curl
    - curl -L https://fly.io/install.sh | sh
  script:
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker build --cache-from ${CI_REGISTRY_IMAGE} -t ${CI_REGISTRY_IMAGE}:latest -t ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA} -t ${CI_REGISTRY_IMAGE}:deploy .
    - docker push ${CI_REGISTRY_IMAGE} --all-tags
    - /root/.fly/bin/flyctl deploy --config ./fly.production.toml

notify:success:
  stage: notify
  only:
    - main
  before_script: []
  script:
    - wget https://raw.githubusercontent.com/hmajid2301/gitlab-ci-discord-webhook/master/send.sh
    - chmod +x send.sh
    - ./send.sh success "üöÄ Successfully deployed to fly.io"
  when: on_success

notify:failure:
  stage: notify
  only:
    - main
  before_script: []
  script:
    - wget https://raw.githubusercontent.com/hmajid2301/gitlab-ci-discord-webhook/master/send.sh
    - chmod +x send.sh
    - ./send.sh failure "‚ùå Failed to deploy to fly.io"
  when: on_failure
